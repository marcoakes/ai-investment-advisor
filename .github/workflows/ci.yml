name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk fonts-liberation

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check code formatting with Black
      run: |
        black --check --diff investment_advisor/

    - name: Test import functionality
      run: |
        python -c "
        import sys
        import os
        sys.path.append(os.getcwd())
        try:
            from investment_advisor.cli import InvestmentAdvisorCLI
            from investment_advisor.core.base import ToolRegistry
            from investment_advisor.data.stock_data import YahooFinanceAPI
            print('✅ All imports successful')
        except Exception as e:
            print(f'❌ Import failed: {e}')
            sys.exit(1)
        "

    - name: Test CLI help command
      run: |
        python investment_advisor/cli.py --query "help" || echo "CLI test completed"

    - name: Run basic functionality tests
      run: |
        python -c "
        import sys
        import os
        sys.path.append(os.getcwd())
        from investment_advisor.core.base import ToolRegistry
        from investment_advisor.data.stock_data import YahooFinanceAPI
        
        # Test tool registry
        registry = ToolRegistry()
        yahoo_tool = YahooFinanceAPI()
        registry.register_tool(yahoo_tool)
        
        # Test tool parameters
        params = yahoo_tool.get_parameters()
        assert 'symbol' in params
        
        print('✅ Basic functionality tests passed')
        "

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t ai-investment-advisor:test .

    - name: Test Docker container
      run: |
        docker run --rm ai-investment-advisor:test python -c "print('Docker test successful')"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security scan with Bandit
      run: |
        pip install bandit
        bandit -r investment_advisor/ -f json -o bandit-report.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json